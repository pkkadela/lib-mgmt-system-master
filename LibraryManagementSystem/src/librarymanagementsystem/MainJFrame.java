/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanagementsystem;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohanakrishna
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    int myBooksCounter=0;
    int no_of_books = 0;
    static Connection con;
    String card_no, fname, lname, address, phone;
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        options = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        library = new javax.swing.JTabbedPane();
        registrationTab = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fNameTxt = new javax.swing.JTextField();
        lNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SSN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        phoneNoTxt = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTxt = new javax.swing.JTextArea();
        loginTab = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cnoTxt = new javax.swing.JTextField();
        showDetailsButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Checkout = new javax.swing.JButton();
        Checkin = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        showHistory = new javax.swing.JButton();
        calculateFine = new javax.swing.JButton();
        payfineTab = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        cardFineTxt = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        ShowFines = new javax.swing.JButton();
        payFineButton = new javax.swing.JButton();
        searchTab = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CheckoutButton = new javax.swing.JButton();
        cardnoCheckoutTxt = new javax.swing.JTextField();
        cardno_checkout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setBackground(new java.awt.Color(255, 153, 51));
        jLabel1.setText("Eugene McDermott Library");

        library.setBorder(new javax.swing.border.MatteBorder(null));

        registrationTab.setBackground(new java.awt.Color(0, 204, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setText("First Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setText("Last Name");

        fNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameTxtActionPerformed(evt);
            }
        });

        lNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNameTxtActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setText("SSN");

        SSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setText("Address");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel6.setText("Phone Number");

        phoneNoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNoTxtActionPerformed(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        addressTxt.setColumns(20);
        addressTxt.setRows(5);
        jScrollPane1.setViewportView(addressTxt);

        javax.swing.GroupLayout registrationTabLayout = new javax.swing.GroupLayout(registrationTab);
        registrationTab.setLayout(registrationTabLayout);
        registrationTabLayout.setHorizontalGroup(
            registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationTabLayout.createSequentialGroup()
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)))
                            .addGroup(registrationTabLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel6)))
                        .addGap(23, 23, 23)
                        .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SSN, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(registerButton)))
                .addContainerGap(821, Short.MAX_VALUE))
        );
        registrationTabLayout.setVerticalGroup(
            registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationTabLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(fNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4))
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2))
                    .addGroup(registrationTabLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(SSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(registrationTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phoneNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(registerButton)
                .addContainerGap(250, Short.MAX_VALUE))
        );

        library.addTab("Registration", registrationTab);

        loginTab.setBackground(new java.awt.Color(0, 204, 204));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setText("Card Number");

        showDetailsButton.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        showDetailsButton.setText("Show Borrowed Books");
        showDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailsButtonActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel9.setText("Please enter Card Number");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Loan ID", "Card Number", "ISBN", "Date Out", "Due Date", "Date In"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        Checkout.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        Checkout.setText("Search & Checkout");
        Checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutActionPerformed(evt);
            }
        });

        Checkin.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        Checkin.setText("Checkin");
        Checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckinActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel8.setText("Active");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel11.setText("History");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Loan ID", "Card Number", "ISBN", "Date Out", "Due Date", "Date In"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        showHistory.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        showHistory.setText("Show History");
        showHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHistoryActionPerformed(evt);
            }
        });

        calculateFine.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        calculateFine.setText("Calculate Fine");
        calculateFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateFineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginTabLayout = new javax.swing.GroupLayout(loginTab);
        loginTab.setLayout(loginTabLayout);
        loginTabLayout.setHorizontalGroup(
            loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTabLayout.createSequentialGroup()
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(showDetailsButton))
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(loginTabLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(38, 38, 38)
                                .addComponent(cnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(108, 108, 108)
                        .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(loginTabLayout.createSequentialGroup()
                                    .addComponent(Checkin)
                                    .addGap(75, 75, 75)
                                    .addComponent(showHistory)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Checkout)
                                    .addGap(33, 33, 33)
                                    .addComponent(calculateFine))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        loginTabLayout.setVerticalGroup(
            loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cnoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(showDetailsButton))
                    .addGroup(loginTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(loginTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Checkin)
                    .addComponent(showHistory)
                    .addComponent(Checkout)
                    .addComponent(calculateFine))
                .addGap(57, 57, 57)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addGap(36, 36, 36))
        );

        library.addTab("Borrower Details", loginTab);

        payfineTab.setBackground(new java.awt.Color(0, 204, 204));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel13.setText("Card No");

        cardFineTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardFineTxtActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Loan ID", "ISBN", "Fine Amount", "Paid", "Date In"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        ShowFines.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        ShowFines.setText("Show Fines");
        ShowFines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFinesActionPerformed(evt);
            }
        });

        payFineButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        payFineButton.setText("Pay Fines");
        payFineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payFineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout payfineTabLayout = new javax.swing.GroupLayout(payfineTab);
        payfineTab.setLayout(payfineTabLayout);
        payfineTabLayout.setHorizontalGroup(
            payfineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payfineTabLayout.createSequentialGroup()
                .addGroup(payfineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payfineTabLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(cardFineTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(payfineTabLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(payfineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ShowFines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(payFineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        payfineTabLayout.setVerticalGroup(
            payfineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payfineTabLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(payfineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(cardFineTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(ShowFines)
                .addGap(37, 37, 37)
                .addComponent(payFineButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(payfineTabLayout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 255, Short.MAX_VALUE))
        );

        library.addTab("Pay Fine", payfineTab);

        searchTab.setBackground(new java.awt.Color(0, 204, 204));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Enter any combination of ISBN,Author or Title :");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Title", "Author", "Availability"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        CheckoutButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        CheckoutButton.setText("Checkout");
        CheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutButtonActionPerformed(evt);
            }
        });

        cardno_checkout.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        cardno_checkout.setText("Enter Card No :");

        javax.swing.GroupLayout searchTabLayout = new javax.swing.GroupLayout(searchTab);
        searchTab.setLayout(searchTabLayout);
        searchTabLayout.setHorizontalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(searchText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardnoCheckoutTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(searchTabLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jButton3))
                            .addComponent(cardno_checkout)))
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(CheckoutButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE))
        );
        searchTabLayout.setVerticalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton3)
                .addGap(47, 47, 47)
                .addComponent(cardno_checkout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cardnoCheckoutTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CheckoutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(searchTabLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 207, Short.MAX_VALUE))
        );

        library.addTab("Search", searchTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(library)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(456, 456, 456)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(library)
                .addContainerGap())
        );

        library.getAccessibleContext().setAccessibleName("Register");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailsButtonActionPerformed
        // TODO add your handling code here:
        String cno;
        //int bookcounter;
        cno = cnoTxt.getText();
        //System.out.println(cno);
        try
            {
                con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
                if(cno!=null)
                {
                    Statement stmt = con.createStatement();
                    stmt.executeQuery("use library;");
                    //ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM book_loans where card_no=\"" + eno + "\";");
                    DefaultTableModel model = new DefaultTableModel(new String[]{"Load ID","Card Number","ISBN","Date Out","Due Date","Date In"}, 0);
                    ResultSet userdetails = stmt.executeQuery("SELECT loan_id,card_no,isbn,date_out,due_date,date_in FROM borrower NATURAL JOIN book_loans where card_no=\""+ cno + "\" AND date_in is null;");
                    while(userdetails.next())
                    {
                        String loan_id = userdetails.getString("loan_id");
                        String card_no = userdetails.getString("card_no");
                        String isbn = userdetails.getString("isbn");
                        String date_out = userdetails.getString("date_out");
                        String due_date = userdetails.getString("due_date");
                        String date_in = userdetails.getString("date_in");

                        model.addRow(new Object[]{loan_id,card_no,isbn,date_out,due_date,date_in});
                    }
                    jTable2.setModel(model);
                    showHistory.doClick();

                    no_of_books = jTable2.getRowCount();
                    //System.out.println(myBooksCounter);
                    if(no_of_books == 0)
                    {
                        JOptionPane.showMessageDialog(null, "The user doesn't have any checked out books");
                    }
                    ResultSet counter = stmt.executeQuery("SELECT COUNT(*) FROM borrower NATURAL JOIN book_loans where card_no=\"" + cno + "\";");
                    while(counter.next())
                    {
                        myBooksCounter+=1;
                        //System.out.println(myBooksCounter);
                    }
                    con.close();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please enter the Card Number !");
                }

            }
            catch(Exception e)
            {
                System.out.println("Error in connection: " + e.getMessage());
            }
        
        
    }//GEN-LAST:event_showDetailsButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String searchBoxString = searchText.getText();
        String[] words=searchBoxString.split("\\s+");
        String[] newWords = new String[3];
        if(words.length==1){        
            newWords[0] = words[0];
            newWords[1] = "";
            newWords[2] = "";
            words = newWords;
        }
        else if(words.length==2){
            newWords[0] = words[0];
            newWords[1] = words[1];
            newWords[2] = "";
            words = newWords;
        }
        try
        {
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            stmt.executeQuery("use library;");
            DefaultTableModel model2 = new DefaultTableModel(new String[]{"ISBN","Title","Author","Availability"}, 0); 
            String query_string = "SELECT distinct book.isbn,title,author_name,availability FROM book natural join book_authors WHERE "
                    + "(book.isbn like '%"+words[0]+"%' and ((author_name like '%"+words[1]+"%' and title like '%"+words[2]+"%') or (author_name like '%"+words[2]+"%' and title like '%"+words[1]+"%')))"
                                        +"or"
                    + "(book.isbn like '%"+words[1]+"%' and ((author_name like '%"+words[2]+"%' and title like '%"+words[0]+"%')  or (author_name like '%"+words[0]+"%' and title like '%"+words[2]+"%')))"
					+"or"
                    + "(book.isbn like '%"+words[2]+"%' and ((author_name like '%"+words[1]+"%' and title like '%"+words[0]+"%') or (author_name like '%"+words[0]+"%' and title like '%"+words[1]+"%')))";
            System.out.println(query_string);
            ResultSet searchWords = stmt.executeQuery(query_string);
            
             while(searchWords.next())
            {
                String isbn = searchWords.getString("isbn");
                String title = searchWords.getString("title");
                String author_name = searchWords.getString("author_name");
                String availability = searchWords.getString("availability");

                model2.addRow(new Object[]{isbn,title, author_name,availability});
            }    
            jTable1.setModel(model2);
            int row_count = jTable1.getRowCount();
            if(row_count == 0)
            {
              JOptionPane.showMessageDialog(null, "No Books found!!!");  
            }
//            for (String w:words)
//            {
//             ResultSet searchWords = stmt.executeQuery("SELECT isbn,title,author_name FROM book NATURAL JOIN book_authors WHERE isbn like '%"+w+"%' OR title like '%"+w+"%' OR author_name like '%"+w+"%';");
//             while(searchWords.next())
//                {
//                    String isbn = searchWords.getString("isbn");
//                    String title = searchWords.getString("title");
//                    String author_name = searchWords.getString("author_name");
//                    
//                    model2.addRow(new Object[]{isbn,title, author_name});
//                }
//                jTable1.setModel(model2);
//            }
        }
        catch(Exception e)
        {
            System.out.println("Error in connection: " + e.getMessage());
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void CheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutActionPerformed
        // TODO add your handling code here:
        System.out.println(jTable2.getSelectedRow());
        System.out.println(myBooksCounter);
        //int selrows[] = jTable2.getSelectedRows();
        int no_of_books = jTable2.getRowCount();
        //System.out.println("Printing no of books user has");
        System.out.println(no_of_books);
        try
        {
            if(no_of_books == 3)
            {
               JOptionPane.showMessageDialog(null, "User already has 3 books!!! "); 
            }
            else if(no_of_books < 3)
            {
                //System.out.println("Test");
                library.setSelectedIndex(2);
                
            }
        }
        catch(Exception e)
        {
            System.out.println("No rows selected" + e.getMessage());
        }
        

            
    }//GEN-LAST:event_CheckoutActionPerformed

    private void CheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckinActionPerformed
        // TODO add your handling code here:
        try
        {
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            
            DefaultTableModel model3 = (DefaultTableModel) jTable2.getModel();
            int[] selectedRow = jTable2.getSelectedRows();
            
            if(selectedRow.length> 0)
            {
                String c_no = cnoTxt.getText();
                String isbn= "";
                for(int each:selectedRow){
                    String date_in = (String) jTable2.getValueAt(each, 5);
                    if(date_in == null)
                    {
                        
                        isbn+=",\""+ (String) jTable2.getValueAt(each, 2)+"\"";
                        System.out.println(date_in);
                        System.out.println(isbn);
                        
                        
                       
                        
    //                    model3.removeRow(jTable2.getSelectedRow());
                        
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please select a valid book to return");
                        System.out.println("date_in"+date_in);
                    }
                }
                model3.setRowCount(0);
                isbn = isbn.substring(1);
                System.out.println("isbn="+isbn);
                stmt.executeQuery("use library;");
                stmt.executeUpdate("UPDATE book_loans SET date_in=Now() WHERE ISBN IN (" + isbn + ") AND card_no=\"" + c_no + "\";");
                //System.out.println("no error till here");
                con.close();
                showDetailsButton.doClick();
            }
            else if(jTable2.getSelectedRow() < 0)
            {
              JOptionPane.showMessageDialog(null, "Please select a valid book to return");   
            }
            
            
        }
        catch(Exception e)
        {
            System.out.println("dsddsfsdfError in connection: " + e.getMessage());
        }
    }//GEN-LAST:event_CheckinActionPerformed

    private void showHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHistoryActionPerformed
        // TODO add your handling code here:
        String cno = cnoTxt.getText();
        try
        {

            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            
            Statement stmt = con.createStatement();
            stmt.executeQuery("use library;");
                //ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM book_loans where card_no=\"" + eno + "\";");
            DefaultTableModel model4 = new DefaultTableModel(new String[]{"Load ID","Card Number","ISBN","Date Out","Due Date","Date In"}, 0);
            ResultSet userdetails = stmt.executeQuery("SELECT loan_id,card_no,isbn,date_out,due_date,date_in FROM borrower NATURAL JOIN book_loans where card_no=\""+ cno + "\" AND date_in IS NOT NULL;");
            while(userdetails.next())
                {
                    String loan_id = userdetails.getString("loan_id");
                    String card_no = userdetails.getString("card_no");
                    String isbn = userdetails.getString("isbn");
                    String date_out = userdetails.getString("date_out");
                    String due_date = userdetails.getString("due_date");
                    String date_in = userdetails.getString("date_in");

                    model4.addRow(new Object[]{loan_id,card_no,isbn,date_out,due_date,date_in});
                }
                jTable3.setModel(model4);
                con.close();
        }
        catch(Exception e)
        {
            System.out.println("Error in connection: " + e.getMessage());
        }
    }//GEN-LAST:event_showHistoryActionPerformed

    private void cardFineTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardFineTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardFineTxtActionPerformed

    private void calculateFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateFineActionPerformed
        // TODO add your handling code here:
        double fine=0.00;
        String loan_id;
        String noofdays;
        int no_of_days;
        try 
        {
            //String cno = cardnoCheckoutTxt.getText();
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            stmt.executeQuery("use library;");
            ResultSet finedays = stmt.executeQuery("SELECT *,timestampdiff(day,book_loans.due_date,book_loans.date_in) AS noofdays from book_loans where timestampdiff(day,book_loans.due_date,book_loans.date_in)>0 UNION SELECT *,timestampdiff(day,book_loans.due_date,current_timestamp()) as noofdays FROM book_loans WHERE timestampdiff(day,book_loans.due_date,current_timestamp()) >0;");
            while(finedays.next())
            {
               noofdays = finedays.getString("noofdays");
               loan_id = finedays.getString("loan_id");
               no_of_days = Integer.parseInt(noofdays);
               stmt = con.createStatement();
               stmt.executeQuery("use library;");
               fine = no_of_days * 0.25;
               try
               {
               stmt.executeUpdate("INSERT INTO fines (Loan_id,fine_amount,paid) VALUES ("+loan_id+","+fine+",'NO')");
               }
               catch(Exception e)
               {
                    System.out.println(" Primary key update Error for fines: " + e.getMessage());
                    stmt.executeUpdate("UPDATE fines SET fine_amount="+fine+" WHERE loan_id="+loan_id+" AND paid = 'NO';");
               }
            }
        }
        catch(Exception e)
        {
            System.out.println(" FinesUpdate Error in connection: " + e.getMessage());
        }
        
        library.setSelectedIndex(2);
    }//GEN-LAST:event_calculateFineActionPerformed

    private void CheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutButtonActionPerformed
        // TODO add your handling code here:
        //int each = 0;
        try
        {
            String counter="";
            String cno = cardnoCheckoutTxt.getText();
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            stmt.executeQuery("use library;");
            ResultSet user_book_count = stmt.executeQuery("SELECT COUNT(*) AS row_count FROM book_loans where card_no=\"" + cno + "\" AND date_in is NULL;");
            if(user_book_count.next())
            {
                counter = user_book_count.getString("row_count");
            }
            else
            {
              JOptionPane.showMessageDialog(null, "The user doesn't exist, Please enter a valid Card Number");    
            }
            System.out.println(counter);
            int allow_books = 3 - Integer.parseInt(counter);
            int[] selectedRow = jTable1.getSelectedRows();
            
            if(selectedRow.length==0){
                JOptionPane.showMessageDialog(null, "No books selected");  
                return;
            }
            
            boolean flag = false;
            //jTable1.getSelectedRow();
            if(allow_books==0){
                JOptionPane.showMessageDialog(null, "This user already has 3 books");  
                return;
            }
            for(int each:selectedRow)
            {
                if(allow_books>0){
                    String availability = (String) jTable1.getValueAt(each, 3);
                    String isbn = (String) jTable1.getValueAt(each, 0);

                    if("YES".equals(availability))
                    {
                        stmt.executeUpdate("INSERT INTO book_loans(isbn,card_no) values(\"" +isbn+"\" ,\""+cno+"\");");
                        allow_books--;
                        flag = true;
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(null, "Please select a book that is available!");     
                    }
                }
                else{
                    break;
                }
            }
            if(flag)
                JOptionPane.showMessageDialog(null, "Avialible Book(s) successfully checked out");  
            
            
            
        }
        catch(Exception e)
        {
            System.out.println(" CheckoutButtonActionPerformed Error in connection: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "The user doesn't exist, Please enter a valid Card Number");  
        }
        
    }//GEN-LAST:event_CheckoutButtonActionPerformed

    private void ShowFinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFinesActionPerformed
        // TODO add your handling code here:
        try
        {
            //String counter="";
            String card_no = cardFineTxt.getText();
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            DefaultTableModel modelfines = new DefaultTableModel(new String[]{"Load ID","ISBN","Fine Amount","Paid","Date In"}, 0);
            stmt.executeQuery("use library;");
            ResultSet fine_cardno = stmt.executeQuery("SELECT loan_id,isbn,fine_amount,paid,date_in from book_loans NATURAL JOIN fines WHERE card_no="+card_no+";");
            while(fine_cardno.next())
            {
                String loan_id=fine_cardno.getString("loan_id");
                String isbn=fine_cardno.getString("isbn");
                String fine_amount=fine_cardno.getString("fine_amount");
                String paid=fine_cardno.getString("paid");
                String date_in=fine_cardno.getString("date_in");
                modelfines.addRow(new Object[]{loan_id,isbn,fine_amount,paid,date_in});
            }
            jTable4.setModel(modelfines);
            if(jTable4.getRowCount()==0)
            {
              JOptionPane.showMessageDialog(null, "No fine to be paid");  
            }
            
        }
        catch(Exception e)
        {
            System.out.println("Unable to Show Fines " + e.getMessage());
        }
        
    }//GEN-LAST:event_ShowFinesActionPerformed

    private void payFineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payFineButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            //String counter="";
            String card_no = cardFineTxt.getText();
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            Statement stmt = con.createStatement();
            //jTable4.getSelectedRows();
            int[] selectedRow = jTable4.getSelectedRows();
            
            if(selectedRow.length>= 0)
            {
                //String c_no = cnoTxt.getText();
                //String isbn= "";
                for(int each:selectedRow)
                {
                    String date_in = (String) jTable4.getValueAt(each, 4);
                    String loan_id = (String) jTable4.getValueAt(each, 0);
                    if(date_in != null)
                    {
                        //String loan_id=(String)jTable4.getValueAt(each,0);                        
                        //isbn+=",\""+ (String) jTable4.getValueAt(each, 2)+"\"";
                        //System.out.println(date_in);
                        //System.out.println(isbn);
                        stmt.executeQuery("use library;");
                        stmt.executeUpdate("UPDATE fines SET paid = 'YES' WHERE loan_id="+loan_id+";");
                        
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please select a book which has been returned");
                        //System.out.println("date_in"+date_in);
                    }
                }
            }
            DefaultTableModel modelafterfines = new DefaultTableModel(new String[]{"Load ID","ISBN","Fine Amount","Paid","Date In"}, 0);
            stmt.executeQuery("use library;");
            ResultSet afterfine_cardno = stmt.executeQuery("SELECT loan_id,isbn,fine_amount,paid,date_in from book_loans NATURAL JOIN fines WHERE card_no="+card_no+";");
            while(afterfine_cardno.next())
            {
                String loan_id=afterfine_cardno.getString("loan_id");
                String isbn=afterfine_cardno.getString("isbn");
                String fine_amount=afterfine_cardno.getString("fine_amount");
                String paid=afterfine_cardno.getString("paid");
                String date_in=afterfine_cardno.getString("date_in");
                modelafterfines.addRow(new Object[]{loan_id,isbn,fine_amount,paid,date_in});
            }
            jTable4.setModel(modelafterfines);
        }
        catch(Exception e)
        {
            System.out.println("Unable to Show Fines " + e.getMessage());
        }
    }//GEN-LAST:event_payFineButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        con = null;
        int user = 0;
        //f2 = 0;

        try
        {
            con = DriverManager.getConnection("jdbc:mysql://localhost", "root", "mysql");
            // Checking if all the fields are entered.
            if (fNameTxt.getText().equals("") || lNameTxt.getText().equals("") || SSN.getText().equals("") || phoneNoTxt.getText().equals("") || addressTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "All the fields are mandatory !!!");
                //JOptionPane.showMessageDialog(null, "My Goodness, this is so concise");
            }
            else
            {
                //System.out.println("Hooray");
                Statement stmt = con.createStatement();
                stmt.executeQuery("use library;");
                ResultSet rs = stmt.executeQuery("SELECT * FROM borrower;");
                while(rs.next())
                {
                    String ssn, first_name, last_name, address, phone;
                    int card_no;
                    card_no = rs.getInt("card_no");
                    ssn = rs.getString("ssn");
                    first_name = rs.getString("first_name");
                    last_name = rs.getString("last_name");
                    address = rs.getString("address");
                    phone = rs.getString("phone");
                    if(ssn.equals(SSN.getText()))
                    {
                        user = 1;
                    }

                }
                if(user==1)
                {
                    JOptionPane.showMessageDialog(null, "The user already exists.Please login using SSN or Card No");
                }
                if(user!=1)
                {
                    stmt.executeUpdate("INSERT INTO borrower (first_name,last_name,ssn,address,phone) VALUES(\""+ fNameTxt.getText() + "\",\"" + lNameTxt.getText() + "\",\"" + SSN.getText() + "\",\"" + addressTxt.getText() + "\",\"" + phoneNoTxt.getText() + "\");");
                    ResultSet luser = stmt.executeQuery("SELECT card_no FROM borrower ORDER BY card_no DESC LIMIT 1;");
                    while(luser.next())
                    {card_no = luser.getString("card_no");
                        JOptionPane.showMessageDialog(null, "New user successfully created. The Card Number is " + card_no);
                        fNameTxt.setText("");
                        lNameTxt.setText("");
                        SSN.setText("");
                        addressTxt.setText("");
                        phoneNoTxt.setText("");
                        luser.close();
                    }
                }
                rs.close();
            }
            con.close();

        }
        catch(Exception e)
        {
            System.out.println("Error in connection: " + e.getMessage());
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void phoneNoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNoTxtActionPerformed

    private void SSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNActionPerformed

    private void lNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameTxtActionPerformed

    private void fNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameTxtActionPerformed

     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { 
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Checkin;
    private javax.swing.JButton Checkout;
    private javax.swing.JButton CheckoutButton;
    private javax.swing.JTextField SSN;
    private javax.swing.JButton ShowFines;
    private javax.swing.JTextArea addressTxt;
    private javax.swing.JButton calculateFine;
    private javax.swing.JTextField cardFineTxt;
    private javax.swing.JTextField cardnoCheckoutTxt;
    private javax.swing.JLabel cardno_checkout;
    private javax.swing.JTextField cnoTxt;
    private javax.swing.JTextField fNameTxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField lNameTxt;
    private javax.swing.JTabbedPane library;
    private javax.swing.JPanel loginTab;
    private javax.swing.ButtonGroup options;
    private javax.swing.JButton payFineButton;
    private javax.swing.JPanel payfineTab;
    private javax.swing.JTextField phoneNoTxt;
    private javax.swing.JButton registerButton;
    private javax.swing.JPanel registrationTab;
    private javax.swing.JPanel searchTab;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton showDetailsButton;
    private javax.swing.JButton showHistory;
    // End of variables declaration//GEN-END:variables
}
